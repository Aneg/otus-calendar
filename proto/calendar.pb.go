// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/calendar.proto

package calendar

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Event struct {
	UserId               uint32               `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Duration             int32                `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Datetime             *timestamp.Timestamp `protobuf:"bytes,3,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Description          string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_319e4b398a4282cb, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Event) GetDuration() int32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *Event) GetDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.Datetime
	}
	return nil
}

func (m *Event) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AddEventRequest struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEventRequest) Reset()         { *m = AddEventRequest{} }
func (m *AddEventRequest) String() string { return proto.CompactTextString(m) }
func (*AddEventRequest) ProtoMessage()    {}
func (*AddEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_319e4b398a4282cb, []int{1}
}

func (m *AddEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventRequest.Unmarshal(m, b)
}
func (m *AddEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventRequest.Marshal(b, m, deterministic)
}
func (m *AddEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventRequest.Merge(m, src)
}
func (m *AddEventRequest) XXX_Size() int {
	return xxx_messageInfo_AddEventRequest.Size(m)
}
func (m *AddEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventRequest proto.InternalMessageInfo

func (m *AddEventRequest) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type SuccessResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuccessResponse) Reset()         { *m = SuccessResponse{} }
func (m *SuccessResponse) String() string { return proto.CompactTextString(m) }
func (*SuccessResponse) ProtoMessage()    {}
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_319e4b398a4282cb, []int{2}
}

func (m *SuccessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuccessResponse.Unmarshal(m, b)
}
func (m *SuccessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuccessResponse.Marshal(b, m, deterministic)
}
func (m *SuccessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuccessResponse.Merge(m, src)
}
func (m *SuccessResponse) XXX_Size() int {
	return xxx_messageInfo_SuccessResponse.Size(m)
}
func (m *SuccessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuccessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuccessResponse proto.InternalMessageInfo

func (m *SuccessResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type DropEventRequest struct {
	UserId               uint32               `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Datetime             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DropEventRequest) Reset()         { *m = DropEventRequest{} }
func (m *DropEventRequest) String() string { return proto.CompactTextString(m) }
func (*DropEventRequest) ProtoMessage()    {}
func (*DropEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_319e4b398a4282cb, []int{3}
}

func (m *DropEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DropEventRequest.Unmarshal(m, b)
}
func (m *DropEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DropEventRequest.Marshal(b, m, deterministic)
}
func (m *DropEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DropEventRequest.Merge(m, src)
}
func (m *DropEventRequest) XXX_Size() int {
	return xxx_messageInfo_DropEventRequest.Size(m)
}
func (m *DropEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DropEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DropEventRequest proto.InternalMessageInfo

func (m *DropEventRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *DropEventRequest) GetDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.Datetime
	}
	return nil
}

type EditEventRequest struct {
	OldDatetime          *timestamp.Timestamp `protobuf:"bytes,3,opt,name=old_datetime,json=oldDatetime,proto3" json:"old_datetime,omitempty"`
	NewEvent             *Event               `protobuf:"bytes,2,opt,name=new_event,json=newEvent,proto3" json:"new_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EditEventRequest) Reset()         { *m = EditEventRequest{} }
func (m *EditEventRequest) String() string { return proto.CompactTextString(m) }
func (*EditEventRequest) ProtoMessage()    {}
func (*EditEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_319e4b398a4282cb, []int{4}
}

func (m *EditEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EditEventRequest.Unmarshal(m, b)
}
func (m *EditEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EditEventRequest.Marshal(b, m, deterministic)
}
func (m *EditEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EditEventRequest.Merge(m, src)
}
func (m *EditEventRequest) XXX_Size() int {
	return xxx_messageInfo_EditEventRequest.Size(m)
}
func (m *EditEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EditEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EditEventRequest proto.InternalMessageInfo

func (m *EditEventRequest) GetOldDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.OldDatetime
	}
	return nil
}

func (m *EditEventRequest) GetNewEvent() *Event {
	if m != nil {
		return m.NewEvent
	}
	return nil
}

type GetEventRequest struct {
	UserId               uint32               `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Datetime             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetEventRequest) Reset()         { *m = GetEventRequest{} }
func (m *GetEventRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventRequest) ProtoMessage()    {}
func (*GetEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_319e4b398a4282cb, []int{5}
}

func (m *GetEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventRequest.Unmarshal(m, b)
}
func (m *GetEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventRequest.Marshal(b, m, deterministic)
}
func (m *GetEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventRequest.Merge(m, src)
}
func (m *GetEventRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventRequest.Size(m)
}
func (m *GetEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventRequest proto.InternalMessageInfo

func (m *GetEventRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *GetEventRequest) GetDatetime() *timestamp.Timestamp {
	if m != nil {
		return m.Datetime
	}
	return nil
}

type GetEventResponse struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventResponse) Reset()         { *m = GetEventResponse{} }
func (m *GetEventResponse) String() string { return proto.CompactTextString(m) }
func (*GetEventResponse) ProtoMessage()    {}
func (*GetEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_319e4b398a4282cb, []int{6}
}

func (m *GetEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventResponse.Unmarshal(m, b)
}
func (m *GetEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventResponse.Marshal(b, m, deterministic)
}
func (m *GetEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventResponse.Merge(m, src)
}
func (m *GetEventResponse) XXX_Size() int {
	return xxx_messageInfo_GetEventResponse.Size(m)
}
func (m *GetEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventResponse proto.InternalMessageInfo

func (m *GetEventResponse) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

type AllRequest struct {
	UserId               uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllRequest) Reset()         { *m = AllRequest{} }
func (m *AllRequest) String() string { return proto.CompactTextString(m) }
func (*AllRequest) ProtoMessage()    {}
func (*AllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_319e4b398a4282cb, []int{7}
}

func (m *AllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllRequest.Unmarshal(m, b)
}
func (m *AllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllRequest.Marshal(b, m, deterministic)
}
func (m *AllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllRequest.Merge(m, src)
}
func (m *AllRequest) XXX_Size() int {
	return xxx_messageInfo_AllRequest.Size(m)
}
func (m *AllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllRequest proto.InternalMessageInfo

func (m *AllRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type AllResponse struct {
	Events               []*Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllResponse) Reset()         { *m = AllResponse{} }
func (m *AllResponse) String() string { return proto.CompactTextString(m) }
func (*AllResponse) ProtoMessage()    {}
func (*AllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_319e4b398a4282cb, []int{8}
}

func (m *AllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllResponse.Unmarshal(m, b)
}
func (m *AllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllResponse.Marshal(b, m, deterministic)
}
func (m *AllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllResponse.Merge(m, src)
}
func (m *AllResponse) XXX_Size() int {
	return xxx_messageInfo_AllResponse.Size(m)
}
func (m *AllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AllResponse proto.InternalMessageInfo

func (m *AllResponse) GetEvents() []*Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func init() {
	proto.RegisterType((*Event)(nil), "calendar.Event")
	proto.RegisterType((*AddEventRequest)(nil), "calendar.AddEventRequest")
	proto.RegisterType((*SuccessResponse)(nil), "calendar.SuccessResponse")
	proto.RegisterType((*DropEventRequest)(nil), "calendar.DropEventRequest")
	proto.RegisterType((*EditEventRequest)(nil), "calendar.EditEventRequest")
	proto.RegisterType((*GetEventRequest)(nil), "calendar.GetEventRequest")
	proto.RegisterType((*GetEventResponse)(nil), "calendar.GetEventResponse")
	proto.RegisterType((*AllRequest)(nil), "calendar.AllRequest")
	proto.RegisterType((*AllResponse)(nil), "calendar.AllResponse")
}

func init() {
	proto.RegisterFile("proto/calendar.proto", fileDescriptor_319e4b398a4282cb)
}

var fileDescriptor_319e4b398a4282cb = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0x26, 0x1d, 0xed, 0xdc, 0x17, 0x50, 0x2b, 0x6b, 0x88, 0xe2, 0x0b, 0x91, 0xa5, 0x89, 0x4a,
	0xa0, 0x54, 0x2a, 0xd2, 0xc4, 0x0e, 0x1c, 0xba, 0x75, 0x42, 0x5c, 0x03, 0x27, 0x2e, 0x55, 0x1a,
	0x3f, 0xa6, 0x48, 0x5e, 0x1c, 0x62, 0x87, 0x1d, 0xf9, 0x2f, 0xf8, 0xe3, 0xf8, 0x6b, 0x50, 0x9d,
	0xd8, 0xcd, 0xa2, 0xc2, 0xc6, 0x81, 0x5b, 0xde, 0xaf, 0xef, 0xf3, 0xfb, 0xde, 0xa7, 0xc0, 0x49,
	0x59, 0x29, 0xa3, 0x16, 0x59, 0x2a, 0xb1, 0x10, 0x69, 0x15, 0xdb, 0x90, 0x12, 0x17, 0xb3, 0x97,
	0xd7, 0x4a, 0x5d, 0x4b, 0x5c, 0xd8, 0xfc, 0xb6, 0xfe, 0xba, 0x30, 0xf9, 0x0d, 0x6a, 0x93, 0xde,
	0x94, 0x4d, 0x2b, 0xff, 0x19, 0xc0, 0xf0, 0xea, 0x3b, 0x16, 0x86, 0x3e, 0x87, 0xe3, 0x5a, 0x63,
	0xb5, 0xc9, 0xc5, 0x2c, 0x88, 0x82, 0xf9, 0xd3, 0x64, 0xb4, 0x0b, 0x3f, 0x0a, 0xca, 0x80, 0x88,
	0xba, 0x4a, 0x4d, 0xae, 0x8a, 0xd9, 0x20, 0x0a, 0xe6, 0xc3, 0xc4, 0xc7, 0xf4, 0x0c, 0x88, 0x48,
	0x0d, 0xee, 0x50, 0x67, 0x47, 0x51, 0x30, 0x0f, 0x97, 0x2c, 0x6e, 0x28, 0x63, 0x47, 0x19, 0x7f,
	0x76, 0x94, 0x89, 0xef, 0xa5, 0x11, 0x84, 0x02, 0x75, 0x56, 0xe5, 0xa5, 0x85, 0x7d, 0x1c, 0x05,
	0xf3, 0x71, 0xd2, 0x4d, 0xf1, 0x77, 0x30, 0x59, 0x09, 0x61, 0x9f, 0x96, 0xe0, 0xb7, 0x1a, 0xb5,
	0xa1, 0xa7, 0x30, 0xc4, 0x5d, 0x6c, 0xdf, 0x17, 0x2e, 0x27, 0xb1, 0x5f, 0xbb, 0x69, 0x6b, 0xaa,
	0xfc, 0x35, 0x4c, 0x3e, 0xd5, 0x59, 0x86, 0x5a, 0x27, 0xa8, 0x4b, 0x55, 0x68, 0xa4, 0x33, 0x38,
	0xd6, 0x4d, 0xca, 0xce, 0x92, 0xc4, 0x85, 0x3c, 0x83, 0xe9, 0xba, 0x52, 0xe5, 0x1d, 0x9e, 0x3f,
	0x2a, 0xd1, 0xdd, 0x76, 0xf0, 0xf0, 0x6d, 0xf9, 0x0f, 0x98, 0x5e, 0x89, 0xdc, 0xdc, 0x21, 0x79,
	0x0f, 0x4f, 0x94, 0x14, 0x9b, 0x7f, 0x50, 0x2f, 0x54, 0x52, 0xac, 0x9d, 0x80, 0x6f, 0x60, 0x5c,
	0xe0, 0xed, 0xa6, 0xd1, 0x63, 0x70, 0x58, 0x0f, 0x52, 0xe0, 0xad, 0xfd, 0xe2, 0x5b, 0x98, 0x7c,
	0x40, 0xf3, 0x7f, 0x97, 0x3c, 0x87, 0xe9, 0x9e, 0xa3, 0xd5, 0xfd, 0x81, 0x17, 0x3b, 0x05, 0x58,
	0x49, 0x79, 0xdf, 0xcb, 0xf8, 0x19, 0x84, 0xb6, 0xad, 0x05, 0x7f, 0x05, 0x23, 0x3b, 0xbe, 0xbb,
	0xe9, 0xd1, 0x21, 0xf4, 0xb6, 0xbc, 0xfc, 0x35, 0x00, 0x72, 0xd9, 0x96, 0xe8, 0x05, 0x10, 0xe7,
	0x2b, 0xfa, 0x62, 0x3f, 0xd1, 0xf3, 0x1a, 0xeb, 0x94, 0x7a, 0x66, 0xe2, 0x8f, 0xe8, 0x1a, 0xc6,
	0xde, 0x34, 0x94, 0xed, 0x3b, 0xfb, 0x4e, 0xba, 0x17, 0xc5, 0xbb, 0xa2, 0x8b, 0xd2, 0xb7, 0xca,
	0xdf, 0x51, 0x2e, 0x81, 0x38, 0xd9, 0xbb, 0xfb, 0xf4, 0xce, 0xcd, 0xd8, 0xa1, 0x92, 0x07, 0x39,
	0x07, 0xb2, 0x92, 0xb2, 0x01, 0x39, 0xe9, 0x88, 0xe2, 0x8f, 0xc2, 0x9e, 0xf5, 0xb2, 0x6e, 0xf4,
	0x02, 0xbe, 0xf8, 0xbf, 0xcd, 0x76, 0x64, 0x0d, 0xf2, 0xf6, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x2c, 0x34, 0x76, 0x0c, 0x96, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalendarClient is the client API for Calendar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalendarClient interface {
	AddEvent(ctx context.Context, in *AddEventRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	DropEvent(ctx context.Context, in *DropEventRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	EditEvent(ctx context.Context, in *EditEventRequest, opts ...grpc.CallOption) (*SuccessResponse, error)
	GetEvent(ctx context.Context, in *GetEventRequest, opts ...grpc.CallOption) (*GetEventResponse, error)
	AllEvent(ctx context.Context, in *AllRequest, opts ...grpc.CallOption) (*AllResponse, error)
}

type calendarClient struct {
	cc grpc.ClientConnInterface
}

func NewCalendarClient(cc grpc.ClientConnInterface) CalendarClient {
	return &calendarClient{cc}
}

func (c *calendarClient) AddEvent(ctx context.Context, in *AddEventRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/AddEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) DropEvent(ctx context.Context, in *DropEventRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/DropEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) EditEvent(ctx context.Context, in *EditEventRequest, opts ...grpc.CallOption) (*SuccessResponse, error) {
	out := new(SuccessResponse)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/EditEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) GetEvent(ctx context.Context, in *GetEventRequest, opts ...grpc.CallOption) (*GetEventResponse, error) {
	out := new(GetEventResponse)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/GetEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calendarClient) AllEvent(ctx context.Context, in *AllRequest, opts ...grpc.CallOption) (*AllResponse, error) {
	out := new(AllResponse)
	err := c.cc.Invoke(ctx, "/calendar.Calendar/AllEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalendarServer is the server API for Calendar service.
type CalendarServer interface {
	AddEvent(context.Context, *AddEventRequest) (*SuccessResponse, error)
	DropEvent(context.Context, *DropEventRequest) (*SuccessResponse, error)
	EditEvent(context.Context, *EditEventRequest) (*SuccessResponse, error)
	GetEvent(context.Context, *GetEventRequest) (*GetEventResponse, error)
	AllEvent(context.Context, *AllRequest) (*AllResponse, error)
}

// UnimplementedCalendarServer can be embedded to have forward compatible implementations.
type UnimplementedCalendarServer struct {
}

func (*UnimplementedCalendarServer) AddEvent(ctx context.Context, req *AddEventRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEvent not implemented")
}
func (*UnimplementedCalendarServer) DropEvent(ctx context.Context, req *DropEventRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DropEvent not implemented")
}
func (*UnimplementedCalendarServer) EditEvent(ctx context.Context, req *EditEventRequest) (*SuccessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditEvent not implemented")
}
func (*UnimplementedCalendarServer) GetEvent(ctx context.Context, req *GetEventRequest) (*GetEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEvent not implemented")
}
func (*UnimplementedCalendarServer) AllEvent(ctx context.Context, req *AllRequest) (*AllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllEvent not implemented")
}

func RegisterCalendarServer(s *grpc.Server, srv CalendarServer) {
	s.RegisterService(&_Calendar_serviceDesc, srv)
}

func _Calendar_AddEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).AddEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/AddEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).AddEvent(ctx, req.(*AddEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_DropEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DropEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).DropEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/DropEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).DropEvent(ctx, req.(*DropEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_EditEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EditEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).EditEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/EditEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).EditEvent(ctx, req.(*EditEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_GetEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).GetEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/GetEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).GetEvent(ctx, req.(*GetEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calendar_AllEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalendarServer).AllEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calendar.Calendar/AllEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalendarServer).AllEvent(ctx, req.(*AllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calendar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calendar.Calendar",
	HandlerType: (*CalendarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddEvent",
			Handler:    _Calendar_AddEvent_Handler,
		},
		{
			MethodName: "DropEvent",
			Handler:    _Calendar_DropEvent_Handler,
		},
		{
			MethodName: "EditEvent",
			Handler:    _Calendar_EditEvent_Handler,
		},
		{
			MethodName: "GetEvent",
			Handler:    _Calendar_GetEvent_Handler,
		},
		{
			MethodName: "AllEvent",
			Handler:    _Calendar_AllEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/calendar.proto",
}
